{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/writing-python-functions-structure/","result":{"data":{"markdownRemark":{"html":"<p>Python’s built-in functions are incredibly useful. Eventually you will find yourself repeating yourself. That’s bad. That’s when programming gets boring. Fortunately, you can write your own functions, which is why the first three letters of function are ‘F-U-N’. If you’re just joining us, you might want to start with our previous tutorial, <a href=\"https://thehelloworldprogram.com/python/python-functions/\">Python Functions are Little Machines in Your Program</a>.</p>\n<h2>Writing Python Functions</h2>\n<p>Now that we’re writing functions, you will want to use IDLE to create new files. It becomes tedious very quickly to enter and reenter functions in the shell prompt. Open IDLE and create a new file, fun.py.</p>\n<p>Enter the following into your file.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>“Something that provides mirth <span class=\"token keyword\">or</span> amusement”<span class=\"token punctuation\">)</span>\n\nfun<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now run fun.py.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Something that provides mirth <span class=\"token keyword\">or</span> amusement<span class=\"token punctuation\">.</span></code></pre></div>\n<p>Fun, right?</p>\n<p>As you may recall, we can pass arguments to a function. Let’s create a new file, snowclone.py. A snowclone is like a one sentence Mad Lib. The classic example is: <em>X</em> is the new black, where <em>X</em> is whatever is cool at the moment, like taupe or mauve.    <a href=\"https://en.wikipedia.org/wiki/Snowclone\">https://en.wikipedia.org/wiki/Snowclone</a></p>\n<p>Enter the following in your new file:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">snowclone</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> “ <span class=\"token keyword\">is</span> the new black<span class=\"token punctuation\">.</span>”<span class=\"token punctuation\">)</span>\n\nsnowclone<span class=\"token punctuation\">(</span>“Python”<span class=\"token punctuation\">)</span></code></pre></div>\n<p>We can also pass multiple arguments to a function. Modify snowclone.py so that it looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">snowclone</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> “ <span class=\"token keyword\">is</span> the new “<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> ”<span class=\"token punctuation\">.</span>”<span class=\"token punctuation\">)</span>\n\nsnowclone<span class=\"token punctuation\">(</span>“Python”<span class=\"token punctuation\">,</span> “Java”<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Then run it.</p>\n<h2>Function Structure</h2>\n<p>Let’s take a look at the structure of a function by breaking down snowclone(). Functions are composed of a header and a body.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">snowclone</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#header</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> “ <span class=\"token keyword\">is</span> the new “<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> ”<span class=\"token punctuation\">.</span>”<span class=\"token punctuation\">)</span> <span class=\"token comment\">#body</span></code></pre></div>\n<h3>The Function Header</h3>\n<p>We define a function with ‘def’, which is obviously short for define. Then we give the function a name. Since we are writing the function we can name it whatever we want, but it’s best practice to name it something that reflects what it does. In our case, we named it snowclone(). We could easily name it flapdoodle(), but then nobody but us would know what it did without some digging. Lastly, we immediately follow our function name with parentheses, our argument variables, and then a colon.</p>\n<h3>The Function Body</h3>\n<p>We indent the next line to specify that everything that follows is a part of this function. Functions can be as long and elaborate as we want. They can even contain functions within themselves. Try this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">snowclone</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token string\">\" is the new\"</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Functions are F-U-N!\"</span><span class=\"token punctuation\">)</span>\n    fun<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsnowclone<span class=\"token punctuation\">(</span><span class=\"token string\">\"Fun\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>I hope you had fun writing your first functions. Here’s some extra credit: Write a function that prints a limerick with this template:</p>\n<blockquote>\n<p>There once was an X from place B,\nWho satisfied predicate P,\nThen X did thing A,\nIn a specified way,\nResulting in circumstance C.</p>\n</blockquote>\n<p>A rolling stone gathers momentum. Get up to speed in <a href=\"https://thehelloworldprogram.com/python/writing-python-functions-part-2-flow-scope/\">our next tutorial on Function Scope &#x26; Flow</a>.</p>","excerpt":"Python’s built-in functions are incredibly useful. Eventually you will find yourself repeating yourself. That’s bad. That’s when programming…","frontmatter":{"lesson":15,"title":"Writing Python Functions Part 1: Structure","category":"Python","video":null,"image":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='222'%20viewBox='0%200%20400%20222'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20111v111h28c27%200%2028%200%2035-2l8-2%204%202%203%201c-1%201%207%201%2019%201s20%200%2019-1v-1l2%201h1l1-2%201-1c0-2%201-2%204-1%202%202%205%202%205%200l3-1%203%201-3-1c-3-2-3-2-1-2l5-1c2%200%202%200%201%201l3%201%2012%201%209%201h2c0%202%205-3%206-6%200-2%201-3%202-3%202%201%203%200%202-1s-1-1%202-1c2%201%203%201%204-1v-19l-1-2%202%202%202%201-2-4-2-3v-1l-3-4c-4-11-6-10-6%203%200%203%202%205%203%204%201%200%203%203%204%209l-1%205-2%201c1%202-3%202-5%200l-2-4c0-3-2-5-2-3-1%201-1%200-1-1%200-4-1-2-2%205l-2%203v3l-2%203-2%203c1%201%200%202-1%203-1%202-1%202-3%200s-3-2-5-1c-2%202-6%204-6%202v-1l-2-1-1-1c-1%201-8-1-8-2%201-1%200-2-2-2l-2-1-1-2v1l-1%201-1-1-1-5v-6c-1-1-1-6%201-9l1-3%201-2v-1l2-2c3-1%204-4%203-5%200-1-1-1-1%201l-2%202c-3%200%205-10%2012-14l5-3%205-1%208-3a37%2037%200%200114-3l-1-1%202-1h3c2%201%201-1-1-4l-3-4-2-4-3-5-2-3-1-3c1%200%200-2-2-3-2-2-6-11-4-11l2%201c0%202%209%206%2013%206%202-1%203-1%203-3%200-4%202-4%203%200l1%203c2%201%203%2012%202%2015v3l1%201c-1%202%201%207%202%206h1v1l-1%203c-1%203%201%206%203%205%201-1%2015%2011%2016%2013v6l1%203%202%203-1%203h-1l2%201%201%202v4c1%201%201%201-1%202-3%201-2%203%202%203%203-1%203-1%203-3v-12a472%20472%200%200139-8l5-4c5-3%2011-8%2013-12%201-2%2010-8%2012-8v1c-1%201-1%201%201%201%201%200%202%200%201%201l1%204v5c-2%202-2%203-1%203v1c-2%201-2%201-1%202l3-1c3-1%208-1%208%201h4l4%202c3%200%204%201%202%201v2l-1%201c-1%200-2%200-2%202l-1%202-1-1c1-1%200-4-1-3l-1-1c0-2-2-3-3-2l-1%206c-1%205%201%207%207%205%203%200%203%200%202%202l-1%201c-1-2-2-1-1%202%200%203%200%203-1%202-1-2-1-1-1%204l-1%204-11%202-2%201c-1%201%208%202%2020%201%205-1%208%203%208%207%200%203-1%204-5%204h-6l-3%201-4%202-2%201c0%202%2013%200%2021-3l5-1%206-1c2-2%205-2%207-1%202%202%2020%202%2023%200%201-1%202-2%203-1%203%202%2028-5%2030-8h3c1-1%201-1%201%201-1%204%201%205%207%205%206-1%204%200-7%204l-10%205-11%204a503%20503%200%2000-24%208l-2%202h4l11-4a256%20256%200%200130-8v1c3%200-10%205-26%209l-6%202h46V111a6855%206855%200%2000-1-41c0%2024%200%2025-2%2024-2-2-4-3-4-1l2%201c2%201%203%201%202%205%200%203-2%206-2%203h-1l-2-1-2-1h-2l-1%204-2%206v3c4-1%205%204%201%209l-2%201v-2l-1%201h-2v2c-2-1-11%2011-11%2014l-1%202-3%206-4%204%203-6c2-3%203-6%202-7l1-3c2%200%208-9%208-10-1-1%201-8%202-11%202-4%203-11%202-11l-2%202c0%203%200%203-1%202v-5l-1%201-2%201c-2%200-3-2-1-2%201%200%202-1%201-3%200-2%200-2%201-1h1v-3c0-1-6-1-8%201l-1%209-1%2012c-2%202-2%202-2%200l-1-9-1%202v3l-1%201-1-5v-4l-1%203c-1%205%200%207%201%207v7l1%206%201-3%201-2%202-2c3-3%204%202%201%205-1%202-1%202-1%200l-2%201-3%202-1%206v6l3-4%203-4%201-1c2%200%201%203-1%204l-2%203-2%202c-2%200-2%201-2%203l-2%2010a160%20160%200%20011-34l-1-10v-8c-1%201-4%200-4-1%201-2-2-5-3-5v1c1%202-1%201-5-2l-4-2-2-3-3-3-1-1h1l1-1-2-1c-1%201-1%201-1-1%201%200%201-1%200%200l-1-1c0-2-8-8-11-9l-4-1-9-2-3-8a195%20195%200%2000-12-29l-1-1-2-1-6-17-2-7V3l-1-1-2-2c-2%200-2%200-1%201l1%202h-2l-2%201-2%201V1h-2c0-2-16-1-16%201h-2c0%201-5%206-6%205l-1%201c0%203-3%204-4%202-2-1-4%200-4%203%201%202-3%203-5%200l-2-1c-1%201-2%200-2-3l-2-3-1%202%202%205c0%204%200%204-1%202s-1-2-2%202c0%203-1%205-2%205-2%200-2%200-1-1l1-12-2%203c-1%203-6%204-9%201l-1-2h-3l-1-1h-7l-3-1h-5c-1-1-3-2-4-1v3h3c2%201%202%203%200%206-1%202%200%205%202%203l5-3%204-2%204%203c3%202%203%202%201%203v1c2%200%201%205-1%206l-2%201-5%201c-4-1-4-1-3%201%203%202%200%203-2%201l-2-1%202%203%202%203%202%201c3-1%202%204-1%205l-4%204-3%201c-3-2-6-1-7%201%200%202-1%203-2%203v6l1%201%202-1c1-2%201-2-1-2l-1-1c1-2%205-2%206-1l1%206v1c1%201%201%202-1%202-1%201-1%201%201%203s2%202%205-1c4-4%204-4%207%200%201%202%203%203%205%203l2%201%201%202v2c-2%201-2%202%200%204%202%203%200%203-2%200l-2-2v2l1%203%201%201c0%203-1%204-2%202-2-2-2-2-3-1l-3%202c-1%200-2%200-1%201l-1%201h-1c0%201%203%202%204%201l1%201%204%201c9%200%2017%203%2013%205l-2%201c1%201-2%203-3%203-2-2-5-2-5-1h-10l-2-1-1-2c-3-2-4-3-3-1s-2%201-3-2l-5-3-3-2c1-1-2-3-6-2h-4v-4c0-4%202-7%204-7l1-1%202-2v-4l-1-5c1-2%200-1-2%201v5c0%203-1%206-4%206l-2%201c-2%205-7-4-7-11v-4l-1%201-2-1-2-3-2-5-2-5-1-4c-2-1-3-5-1-5v1c0%202%202%201%203%200%201-3%204-3%206-1%203%202%204%203%204%201s-2-4-4-3v-1c3-4-2-5-6-1s-9%201-11-8c-1-9-1-10%201-8%202%203%203%202%202-1%200-3%203-7%204-5s3-1%202-2l3-1c3%200%203%200%204-2%201-3%201-3-2-3l-5%203c-3%202-3%202%200-4l-1-1h-4c1-2-8-1-10%201h-1c0-2-3-2-50-2-51%200-52%200-49%204v4l-1%203%201%202v3c-1%202-4%201-5-2l-2-3c-1%200-4-5-4-8h1c1%202%202%202%203%201l1%202v2c1%200%202-7%201-8l-1%201h-1L16%200H0v111m231-87c-1%202-2%202-3%201h-4l-2%201-2%202c0%202-1%202-2%201s-3%201-3%204l-2%203-1%202%203-1%201-1v1c-1%202%201%204%203%203v2l1%201h1c-1%202%200%202%203%201h2v1l-9%209c4%208%206%2010%2011%209%204-1%208-6%208-8v-1c1%201%201-2%201-7%200-4%200-5-2-6-2%200-2%200%200-1%203-1%203-5%201-9l-1-5c0-3%200-3-1-2h-3m-17%2021l-2%202h-2l-1%201-5%203c-1%201-2%202-3%201v1l-1%202-3%202c-1%202-1%202%201%202l9%202c0%202%205%206%208%208h3l1-2v-3l-1-3-3-4c-3-2-3-2-2-4%202-2%204-10%203-10l-2%202M86%2051c-30%205-48%2024-40%2042%2011%2022%2054%2031%2083%2017%2012-6%2020-16%2020-26%200-3%201-4%204-8l5-3h-6c-4%201-5%201-8-3-11-14-36-22-58-19m109%20132v4l-1%203-1%201-1%201c-2%200-2%201-2%203v4l-1-3c-1-4-3-4-3-1%200%205%204%2010%208%2011%202%200%203%200%202-1v-1h1l2-1v-12c-1-9-2-11-4-8'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.8045112781954886,"src":"/static/5fbe3ce46bb82107f24eefeac0b42126/0d359/byting_python_06.2_functions_02.png","srcSet":"/static/5fbe3ce46bb82107f24eefeac0b42126/5ae31/byting_python_06.2_functions_02.png 240w,\n/static/5fbe3ce46bb82107f24eefeac0b42126/88c65/byting_python_06.2_functions_02.png 480w,\n/static/5fbe3ce46bb82107f24eefeac0b42126/0d359/byting_python_06.2_functions_02.png 900w","sizes":"(max-width: 900px) 100vw, 900px"}}}}}},"pageContext":{"slug":"/python/writing-python-functions-structure/","totalLessons":24}}}