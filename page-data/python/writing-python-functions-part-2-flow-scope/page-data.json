{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/writing-python-functions-part-2-flow-scope/","result":{"data":{"markdownRemark":{"html":"<p>The Python interpreter reads a program just like you are reading this page: one line at a time, from left to right and top to bottom. The interpreter executes operations and functions in the order that it encounters them. This is called <em>control flow</em> or the <em>flow of execution</em>.  Unlike the Python interpreter, when we read something and encounter a word we don’t understand, we don’t freak out and shut down(usually). We continue reading and either guess the definition of the word based on context or pause and consult a dictionary. The Python interpreter isn’t so flexible. You can’t call a function before defining it. The interpreter needs to know what the function is and does <em>before</em> it encounters that function.</p>\n<h2>Writing Python Functions: Flow</h2>\n<p>For example, the following program, too_soon.py:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">too_soon<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">too_soon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Don't put the cart before the aardvark\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>…will return this error:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"too_soon.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    too_soon<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nNameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'too_soon'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>module<span class=\"token operator\">></span></code></pre></div>\n<p>When we call a function, the function reads our arguments, one at a time, from left to right. It then processes the argument values and when it’s finished it returns a value. Try the following, in a program called flow.py:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">flow</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span>\n\nflow<span class=\"token punctuation\">(</span>“<span class=\"token punctuation\">(</span><span class=\"token operator\">^</span>_<span class=\"token operator\">-</span><span class=\"token punctuation\">)</span>”<span class=\"token punctuation\">,</span> “<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>_<span class=\"token operator\">^</span><span class=\"token punctuation\">)</span>”<span class=\"token punctuation\">)</span></code></pre></div>\n<p>In the example above, even though we passed in the variable ‘left’ first, our function printed ‘right’ first because that is the order in which we called it.</p>\n<h2>Writing Python Functions: Scope</h2>\n<p>Imagine your Python program is the world(the <em>Hello World</em>), and your function is your group of friends. One of the conventions of programming is to declare variables at the top of your program. These variables are <em>global</em>. Any variables declared within a function are <em>local</em>. Global variables are accessible inside or outside a function, but local variables are only accessible inside the function where they are declared. Global variables are like the news or common knowledge: everyone knows the name of the president of the United States. Local variables are like secrets and inside-jokes: only you and your friends understand them; the rest of the world has no idea what you’re talking about. This is called <em>scope.</em> A variable that is accessible by any function in the program has <em>global scope</em>. A variable that is only accessible inside a function has <em>local scope.</em> Let’s write a program, invitation.py:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">global_variable <span class=\"token operator\">=</span> <span class=\"token string\">\"Today is August 4th.\"</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">party</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    local_variable <span class=\"token operator\">=</span> “Today <span class=\"token keyword\">is</span> my birthday!”\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>global_variable<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>local_variable<span class=\"token punctuation\">)</span>\n\nparty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>global_variable<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>local_variable<span class=\"token punctuation\">)</span></code></pre></div>\n<p>This will return the following error:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"invitation.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>local_variable<span class=\"token punctuation\">)</span>\nNameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'local_variable'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>module<span class=\"token operator\">></span></code></pre></div>\n<p>Change line 10 to something amusing, and run the program again:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">global_variable <span class=\"token operator\">=</span> “Today <span class=\"token keyword\">is</span> August 4th<span class=\"token punctuation\">.</span>”\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">party</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    local_variable <span class=\"token operator\">=</span> “Today <span class=\"token keyword\">is</span> my birthday!”\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>global_variable<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>local_variable<span class=\"token punctuation\">)</span>\n\nparty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>global_variable<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"It's my party and I'll DRY if I want to...\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>When I call the party() function, my friends know that it’s both August 4th and my birthday. Calling the global variable outside the party function returns the date, August 4th, because everyone has access to the date. But calling the local variable outside the party() function returns an error because no one outside the party() function knows it’s my birthday.</p>\n<p>Speaking of party, <a href=\"https://thehelloworldprogram.com/python/python-boolean-logic-not-as-scary-as-it-sounds/\">there’s cake in the next chapter</a>.</p>","excerpt":"The Python interpreter reads a program just like you are reading this page: one line at a time, from left to right and top to bottom. The…","frontmatter":{"lesson":16,"title":"Writing Python Functions, Part 2: Flow & Scope","category":"Python","video":null,"image":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='222'%20viewBox='0%200%20400%20222'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%202l1%201v12L0%2052v38l3-3c2-2%203-3%202-4v-2h1c1%201%201%200%201-3-1-3-1-4%201-4l2%201-1%201-1%202%202%202v-1c-1%200-1-1%201-3l1-2-1-2c0-1%200-2-2-1-2%200-2%200-1-1l3-2%202-1h-2c-2%200-2%200-2-5%201-5%200-8-1-4-1%201-1%200-1-2%200-3%200-3%201-2h1c0-2-1-2-2-2v-5c-2-25-2-25%205-24%203%200%203-2%200-2-3-1-4-6-2-8v-1H9c-1%202-3%201-3%200l1-2V8l1-1%203-1c2-2%203-5%201-3l-1-1c1-2%200-2-2-2L7%201v1H6c0-2-1-2-3-2S0%201%200%202m39%203c-2%202-3%205-2%205l-1%203h-3v2l-3%203c-3%203-4%205-2%204h1l-1%201v2h-1c-1-1-3%202-2%205l-1%201-1%201h1l3%202v2l-2-1h-1l-1-1h-2l-1-2v4c0%202%200%202%201%201%201-2%201-2%202-1v6a1070%201070%200%2001-4%202%20305%20305%200%20011%206v-4c0-1%200-2%201-1%200%202%200%202%202%201h6c1%201%206-2%205-4l2-1c2%200%202%200%201-1h-2l-1-2c0-2%200-3%202-2l1-1v-1l1-2%202-3c1-1%201-1-1-2-2-2-1-4%202-4l2-1h2l2-1-2-1v-1c2-2%207-14%205-14l-1%202-1%201c0-3%202-6%204-6l2-1-6-1h-6l-3%205m37-2l-2%203-3%202c0%202-3%204-4%204h-2c-1-2-1-2-1%200l-1%202c-2-2-3%200-1%202%201%201%201%201-1%201-1-1-2-1-2%201l2%202c2%200%201%201-1%201-3%200-5%201-5%202l-2%204-2%206-1%202-3%202c-2-1-6%206-5%208l-4%203-4%203-2%202v3l-1%202-1%205-1%206-1%203v-7c0-4-3%200-4%205l-2%205-1-3c-1-3-2-4-4-4h-2l2%202c3%202%203%203%202%204l-3%202-1%201v2l-1%205-1%204-1%201-1%201-2%202-4%202c-5%203-5%200-5%2066v62h76l-5-2-9-4c-4-2-6-4-5-6l19%207%206%202c2-1-8-10-16-15-6-4-6-5%200-5l10%203h6c2-2%203-1%203%201-1%202%200%202%204%203%208%203%208%203%208-2%200-6%201-8%2012-19s10-11%2019-8c2%200%202%200%201-1-2-3%201-2%205%202l6%204v3c-1%202%200%203%203%202v5l1%201h2c0%201-1%202-3%201s-2-1-2%201c0%201%200%202%201%201l1%202c0%204%200%205%202%205%202-1%207%200%207%202%200%201-4%201-10-1-3%200-3%200-3%202l-1%203-4%201h-4l-5-3c-2%200-2%200-1%202l1%202%201%201h1l2%202%204%201c3%202%2011%203%2011%202h2l2-1c1%201%203%200%205-1h6l2%201%204-1c2-1%203-1%202-2l1-1c1%200-3-7-5-8-2%200-5-4-4-5l6%202%2010%202c2-1%203%200%204%201l1%201v-1l2-1c3%201%203%201%204-2l5-7c4-4%205-5%204-6v-2c2-2%203-2%203-1l8%201c7%200%208%200%2011%202%205%203%205%202%200%207-4%204-7%206-10%205l-1%201-1%201-1%201-2%201-4%202c-2%202-3%203-4%202h-2l-5%201-4%201c1%202%200%202-3%202l-5%201c-3%202%208%201%2015-1h9c5%203%209%202%2013-3l5-4v3c0%202%201%203%205%204l7%203c4%203%2017%206%2028%207%2011%200%2012%200%2013-2l1-2v4h32c31%200%2033%200%2036-2%207-5%2014-7%209-2s-3%205%205%201c6-3%207-4%209-3%203%201%203%201%202%203-2%203%201%203%2020%203h17v-63a1182%201182%200%2000-2-76%20452%20452%200%2000-3-68c-3-2-3-2-3-7%200-6-2-7-2%200%200%204%200%204-1%201l-1-7c0-2%200-2-1%200h-1c0-3-4-3-4%200h-1c0-2-4-2-65-2a657%20657%200%2000-63%203l-1%202h-1v1h-1v5l1%202c1%202-1%203-1%201h-1l1%202%201%201-1%201h-1l1%202v1c-1%201-1%201%201%203l2%203h-2c-1%201-2%202-1%203l-1%201h-1c0%202-1%202-4%201-4-2-5-1-2%201l1%201h1c2%201%202%206%200%206l-1%202h1l2-1v2c-2%201-3%202-3%207l-2%204c-2%202-2%202%200%202%201%201-2%201-4%201l-1%201%202%201%203%201h-3l-3%201%203%201%201%201-2%201-2%201v2l-3%201c-2%200-3%200-2-1l1-1h1c1-3-1-3-3%200l-4%202V55l-1-14c-1-2-1%203-1%2012l1%2014h-5l-8%201c-2%200-3%200-5-4-2-3-2-4-1-4l2-2h1l1-2h1v7l1-3%201-2%201%203%201%203v-4c1-4-4-12-7-12-2%200-3-4-2-6%200-2%201-2%203-1h2l-3-4-4-4-1-1v-7l2%202c0%202%200%202%201%201%201-2%201-2%202%200l2%202c1%200%201-1-1-4-3-3-3-4%201-4s5%200%204-1l-3-1c-3%201-7-3-6-6%201-2%200-3-1-5-3-2-2-3%201-2%203%200%203%200%202-3V1c1-1-2-1-7-1l-8%201h-2l-19-1c-17%200-17%200-17%202v3l-1-3c0-2-10-3-12%200h-1c-1-2-5-2-5%200v3c1-1%201%200%201%201%200%203%202%205%202%203h1l-3%203c-3%201-3%202-2%206%201%201%201%201%201-1l1-2v3l1%204c2%201%202%204%200%206v1l3%202%202%202-3%202-2%202-7%203v1l1%201%201%201h2c-1-2%202-3%204-2v3c0%202-1%202-2%201-2-1-2-1-2%202%201%203%200%204-1%205v3c-1%202-1%202%205%201l6%201c0%202-8%205-13%206l-4%201-5%203a1640%201640%200%2000-8%205c0%202%203%201%206-1l5-3c1%200%201%201-1%202-2%200-3%202-3%203l-11%205c-3%200-3%200-2-2v-3l-1-5a622%20622%200%20004-27l1-6c2-7%207-13%2012-13l2-1%202-1c1%201%202%200%202-1h3l-1-2-1-1c0-1-1-2-3-1-2%200-2%200-1-1l2-12%202-1c1-1%200-1-2-1-3%200-4%200-4%202s0%202-1%201l-1-2-23-1H76v3m141-1l-1%201-1%209%201%209%201%206%201%208c1%201%201-6%201-17l-1-18-1%202m91%206h-3c-2%200-2%200-1%202h-2c-1-1-6%200-6%202h2c1-1%201-1%201%202v4c1%200%202%201%201%202l1%201%201%201v2h-1l-1%201-2%203h-2l-1-2c-1%200-2-1-1-2l-2%201-2%204-1-2v-4l-3%208c-3%208-3%208-3%2025%201%2013%202%2017%203%2018%202%203%205%203%208%200%203-2%205-7%203-7v-1l-1-2c-2%200-2%200%200-2l1-3c-1-1%202-2%203-1h1l-2-6c0-2-1-5-3-6-1-1-2-2-1-3%201-2%201-2%205%200%203%202%203%202%204%200l-1-2-1-1-2-1c-3-3-3-3%202-8l3-9%202-6%201-3%201-2v5l-2%202-1%202c0%202%200%202%201%201s4-1%207%201l4%201%202%201h3l1%201%201%202c1%202%204%203%202%201l1-1%201-2-2-3v-1h1c1%201%201%201%201-1s-1-3-2-3l-1-1h-2l-4%201c-3%200-3%200-1-1%204-1%201-7-5-7l-4-1h-2M73%209l-2%205-2%204-2%201-2%201c0%201%200%202%201%201l1%201v1c2%202%201%204-1%203s-1%202%202%204l3%202%202-1%205-2%202-1-1-1-1-4c0-4%200-4-1-3h-2l1-1%201-2h-1l-1-1-1-2v-2l-1-4v1m249%2021c2%203%200%207-4%207-2%200-3%200-2-1%200-2-5-4-5-3l-1%205-1%207c-2%202-2%204-1%205l-1%202h-2l2%201%201%203c0%202%200%202-1%201-1-2-3%201-2%204l-1%203c-2%200-2%200-1%201v5c2%201%203%201%205-1l3-2c4-1%2019-13%2016-13-1%200%200-4%202-5s2-4%200-4v-4c2-1%200-5-3-4v-2c1-2%201-3-2-5s-5-3-2%200M210%2069c-44%207-57%2042-23%2059%2035%2017%2086%201%2086-28l4-6%204-3-6%201c-5%200-5%200-7-4-10-13-37-22-58-19m89%2011l2%201%201%202a11081%2011081%200%200011%2014c2%203%203%202%203-1s1-3%203-3v-3l-2%201c-1%202-1%202-3%201v-5c2-2%200-5-3-6-3-2-12-3-12-1m-34%2043l-4%202-9%206c-2%203-1%204%204%206%204%202%204%202%204%207l1%206%201-1%202-2%201%201c-1%201%200%201%201%201s2%200%201-1c-2-1%200-2%204-2%203%200%203%200%202-2-3-2-8-1-9%201-1%201-1%201-1-1-1-3-1-3%204-3l5-2%204-3c4-4-6-5-17-2l-2-1%202-2%202-2h5l4-1c4-1%202-7-2-7l-3%202m34%2033c-7%204-17%2013-16%2015l-1%201c-2-1-7%203-6%204l-1%201-1%201-6%208-5%208-2%209-2%2011c0%202%200%203%201%202l1-3%201-3%201-2%201-2c0-2%200-2%201%200%201%201%201%201%202-1v-4l5-10%201-2c1-1%201-2%202-1%201%200%201%201-1%206l-4%2014c0%2010%201%2011%203%202l3-8c3-4%207-14%206-15l2-2c3-1%205%200%205%201l-1%209c-1%207-1%208%201%208s2%200%202-3v-3l1-3%203-8c4-7%204-7%201-6-4%201-2-2%203-4%203-1%206-3%208-6l4-5c3-2%202-5%200-8-4-3-7-3-12-1'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.8045112781954886,"src":"/static/bcdc38c2e5cae0d46455881281480122/0d359/byting_python_06.3_functions_01.png","srcSet":"/static/bcdc38c2e5cae0d46455881281480122/5ae31/byting_python_06.3_functions_01.png 240w,\n/static/bcdc38c2e5cae0d46455881281480122/88c65/byting_python_06.3_functions_01.png 480w,\n/static/bcdc38c2e5cae0d46455881281480122/0d359/byting_python_06.3_functions_01.png 900w","sizes":"(max-width: 900px) 100vw, 900px"}}}}}},"pageContext":{"slug":"/python/writing-python-functions-part-2-flow-scope/","totalLessons":24}}}