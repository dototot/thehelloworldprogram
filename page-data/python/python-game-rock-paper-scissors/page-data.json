{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/python-game-rock-paper-scissors/","result":{"data":{"markdownRemark":{"html":"<p>I’m guessing you’re learning Python because you want to write interactive programs, like video games. Well, today is your lucky day. You’re going to program your first Python game.</p>\n<h2>Your First Python Game: Rock, Paper, Scissors</h2>\n<p>Open IDLE and create a new file, rps.py. Then enter the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint\n\n<span class=\"token comment\">#create a list of play options</span>\nt <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Rock\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Paper\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Scissors\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">#assign a random play to the computer</span>\ncomputer <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">#set player to False</span>\nplayer <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token keyword\">while</span> player <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\">#set player to True</span>\n    player <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rock, Paper, Scissors?\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> player <span class=\"token operator\">==</span> computer<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tie!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> player <span class=\"token operator\">==</span> <span class=\"token string\">\"Rock\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> computer <span class=\"token operator\">==</span> <span class=\"token string\">\"Paper\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You lose!\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"covers\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You win!\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">,</span> <span class=\"token string\">\"smashes\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> player <span class=\"token operator\">==</span> <span class=\"token string\">\"Paper\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> computer <span class=\"token operator\">==</span> <span class=\"token string\">\"Scissors\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You lose!\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cut\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You win!\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">,</span> <span class=\"token string\">\"covers\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> player <span class=\"token operator\">==</span> <span class=\"token string\">\"Scissors\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> computer <span class=\"token operator\">==</span> <span class=\"token string\">\"Rock\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You lose...\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"smashes\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You win!\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cut\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"That's not a valid play. Check your spelling!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#player was set to True, but we want it to be False so the loop continues</span>\n    player <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    computer <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Experienced programmers will be very quick to point out that there are better ways to write a “Rock, Paper, Scissors” Python game. But, for a beginner, it’s very important to be able to understand and follow the program. Let’s break it down…</p>\n<p>First, we import <span class=\"lang:python decode:true crayon-inline \">randint</span>  from the <span class=\"lang:python decode:true crayon-inline \">random</span> module. This is how our computer opponent will play.</p>\n<p>Then we create a list of play options:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#create a list of play options</span>\nt <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Rock\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Paper\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Scissors\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>There are three possible plays you and the computer can make on each turn, “Rock”, “Paper” and “Scissors”.</p>\n<p>Next we setup our players, the computer and you:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#assign a random play to the computer</span>\ncomputer <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">#set player to False</span>\nplayer <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n<p>We assign a random play to the computer using our list, <em>t,</em> and the randint function. Why (0,2)? Remember that computers start counting at 0. So “Rock” is in the 0 position, “Paper” is in the 1, and so on. Unlike playing RPS with friends in meatspace, the computer has made its play and is waiting for you to take your turn. Also unlike playing RPS with friends in meatspace, the computer isn’t go to cheat and change its play after you make yours. We set you, the player, to False. Why? I’m glad you asked. Let’s take a look at the body of our program the <em>while</em> loop:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> player <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\">#set player to True</span>\n    player <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rock, Paper, Scissors?\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> player <span class=\"token operator\">==</span> computer<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tie!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> player <span class=\"token operator\">==</span> <span class=\"token string\">\"Rock\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> computer <span class=\"token operator\">==</span> <span class=\"token string\">\"Paper\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You lose!\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"covers\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You win!\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">,</span> <span class=\"token string\">\"smashes\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> player <span class=\"token operator\">==</span> <span class=\"token string\">\"Paper\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> computer <span class=\"token operator\">==</span> <span class=\"token string\">\"Scissors\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You lose!\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cut\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You win!\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">,</span> <span class=\"token string\">\"covers\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> player <span class=\"token operator\">==</span> <span class=\"token string\">\"Scissors\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> computer <span class=\"token operator\">==</span> <span class=\"token string\">\"Rock\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You lose...\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"smashes\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You win!\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cut\"</span><span class=\"token punctuation\">,</span> computer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"That's not a valid play. Check your spelling!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#player was set to True, but we want it to be False so the loop continues</span>\n    player <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    computer <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Once the while loop starts, the computer will patiently wait for you to make a play. As soon as you take your turn, your status changes from False to True because any value assigned to the variable player makes player True. We use the input() function to pass the new value to the variable player. Your input will determine which statement is triggered below.</p>\n<p>Using nested if/elif/else statements, we check every possible outcome of the game and return a message stating the winner, a tie, or an error.</p>\n<p>We use else at the end to catch anything that isn’t “Rock”, “Paper” or “Scissors”. Finally we reset the player value to False to restart the while loop.</p>\n<p>Your first Python game. Easy, right? <a href=\"https://thehelloworldprogram.com/python/whats-a-for-loop-python/\">Next up, for loops</a>.</p>","excerpt":"I’m guessing you’re learning Python because you want to write interactive programs, like video games. Well, today is your lucky day. You’re…","frontmatter":{"lesson":22,"title":"Your First Python Game: Rock, Paper, Scissors","category":"Python","video":null,"image":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='222'%20viewBox='0%200%20400%20222'%20preserveAspectRatio='none'%3e%3cpath%20d='M143%204c0%203%200%204-3%203-2%200-3-1-3-3l-1-2-1%203v2l-3%201c-1%200-2-1-2-3l-1-3v3c0%203%200%203-7%204l-11%204-4%203v-6c0-5-1-8-3-7l-1%208c0%206-1%209-2%2010-6%207-7%2017-1%2025%203%205%203%205%203%2019v14H77l-26%201v3l1%204%201%204c2%200%203%209%202%2010l-1-1-2%202-3%204-2-4-1-1c-1%200-10-9-10-11l-1-1c-2%200-2%200-1-1l1-2-2%201-1%201h-4c-2-2-2-4%200-4v-2c-1-1-1-1%202-1%204%200%208-6%206-9v-2l3%201c1%202%201%201%201-3l1-6c2%200%204-1%204-3s3-4%205-3%203%202%203%208c0%205%200%207%203%207%201%200%203-5%202-7l2-1%202%202c0%202%204%203%206%201h5c0-1-3-3-7-3l-2-1h-5l-2-1c-2-1-3-3-1-4h-1v-1l-1-1v-2h2c1%203%202-3%201-6-1-2-1-2-1%201s0%203-1%202c-2-1-9%200-9%201l1%201v1h-3c-1-1-8%200-9%201h9v1l-2%201-1%201c1%201%201%201-1%201h-1v1h-1l-1%201h-1l-3%201c-2%200-2%200%200-1%203-2-2-3-12-2l-5%201%205%202%202%202c3-1%204%201%202%202-2%203%200%205%204%206%203%201%203%201%203%205v3H0v2c0%202%200%203%202%202%202%200%202%200%201%201-2%201-2%201%200%201%203%201%204%206%202%207l-2%202-1%201c-2%200-2%204-2%2030a125%20125%200%20001%2031c-2%201-1%2014%201%2015v8c-3%201-2%202%200%201%201-1%203-1%205%201%204%203%206%203%208%200l2-2%202-2c0-2%200-2%201-1h6l9-2%2033-8%2014-2h4l6-1%206-2c2-1%202-1%202%201-2%204-2%204%200%202l3-2%201-1v1c0%202%200%202%201%201l3-4%201-3%202-1h1l1%202v-2c0-3-6-7-8-7l-5-2c-2-2-5-3-10-3-9%200-10-2-8-8%201-3%200-8-3-16-1-1%200-3%201-5%203-4%203-4%201-4l-2-1-2-1-2%201-1%201v-1c1-2%201-2-1-2a264%20264%200%200151%200l13-1%2014-1c5-3%2019-2%2022%202%202%202%201%203-2%205h-1c3%200%203%200%202%202-2%208-5%2012-8%2010h-7c-5%200-8-3-10-8%200-2-1-3-2-3l-3-1c-2%200-2%200-2%202%200%203-1%203-8%204-9%201-9%201%2010%2010%2012%206%2015%207%2018%207l3-1-11%205c-5%202-6%207-1%209%203%200%203%200-2%202l-11%202c-13%200-13%201-10%2011%202%208%204%2013%208%2017%206%205%208%205%2018%202%203%200%203%200%203%202v14h1c0-2%201-2%202-1l2-1c0-1%201-1%202%201%202%201%202%202%201%202-2%202-2%204-1%205h-1c-4-1-1%202%203%204l12%201c7-1%2017-4%2014-5l-1-1h1l1-1%201-1c2-1%203-1%202%201-2%202-1%201%204-1l3-3h1c2%200%202%200%201-1h2l4%201h1c1-1%201-1%201%201%200%203%202%204%202%201%200-2%200-2%201-1v2c-1%202%200%203%202%201l4%201%203%202h-4c-3%200-3%200-2%201%203%202%2011%201%2016-1s5-3-1-1h-7l5-2c6-1%2011-3%209-4l-6%201c-3%201-5%202-6%201l2-1%207-2%208-2h5l-4%201c-5%201-5%202%200%202h7v2l1-2%202-3%201-2-2%201c-3%202-5%201-5-2%200-5-6-6-15-3l-6%201-4-4c-2-3-5-4-6-4l-4-1-1-2v1l-2%202-11%203-14%204c-8%202-15-2-16-9v-3l7-3%208-1%202-3c1-2%201-2-1-4-2-3-3-4-1-6l2-2v-1c0%201%208-9%2014-19l7-8%202-2-3-2-5-1-4-4c-1-3-2-3-6-3s-5%200-2-5l1-8c0-5%200-6%203-9%207-7%2017-8%2018-3l2-2c1-3%201-3-1-4l-2-2c0-4-14-2-17%202v-4c1-3%201-3-4-3-4%200-4%200-4-3l-1-4h1v-1l2-2%201-1c-1-1%200-2%201-4h2v1l3%201%202%201v-5c-2%200-5-5-5-7%200-3%205-5%208-3l5%201c2%200%203%200%203%202%203%204%203%204%206%202%204-2%204-8%201-10-1-1%200-1%202-1%203%200%206-1%206-3s-3-4-5-4v3l-4%202-3%201v-5l1-1c0%202%200%202%203%201%202-1%202-2%202-6%200-5%200-5-1-1%200%203%200%204-3%204-3%201-3%200-3-2l-1-3v2l-1%202-3-1v-2c2%200%202-1%201-1l1-1%202-5%201-3v-3c-1-2-9%201-10%203%200%203-3%206-4%205v-1c2-1%202-4%200-5s-9%201-12%205-5%204-8%203c-3%200-4-6-3-18l-1-11c-2%200-2%201-2%206l-1%209v3l-3-2c-3-2-3-3-3-9V1l-1%206c0%207-1%208-4%206-2-1-2-2-2-4V5l-1%203c0%203%200%203-2%203l-3-1-1-4V1l-1%204c0%204%200%204-3%204-2%200-2-1-2-4l-1-4-1%203m168%205l-1%208v1l1%204c0%203%200%204-3%204-3%201-4%200-3-4V10l-1-7v7c0%207%200%208-6%207l-4%204c-3%206-2%2010%202%2011%203%200%205%202%206%204v10l2%201%201-1v-1l1%201%202%201%201-1v-2c1-2%201-1%201%202v5h-6c-4%200-5%200-4%201l5%201c5%200%205%200%205%202s0%202-1%201c0-2-2-3-2-1v2c0%201%200%202%202%201l2%201%201%202v2c-2%201-2%203-2%2010v8h-53l-1-3c0-3-2-5-4-5l-2-1%201-1%201-2%201-3c2-1%200-7-2-7l-1-1c0-1-1-2-2-1h-2l-1%202v1l-1-3%201-3%201-1h-1l-2-1c-1-4-2-1%200%204l1%2010c0%203%200%203%201%202l1-1v3l1%201h-1c-1%200-2%201-2%204l-1%204c-2%201-2%206-1%206v1c-1%201-1%201%201%201%201%201%202%200%203-1%202-1%202-1%203%201%202%201%202%2014%201%2019v2a491%20491%200%200156%201l-4%202c-3%202-3%202-1%204%203%202%203%204%200%204l-2%201c0%201%206%207%208%207l3%203c3%203%203%203%202%205l-1%205c0%203%200%204-2%203l-1-2%201-3-3%204h-2c-1-2-9-1-11%203v8l2-2c3-3%2010-5%2011-4l-1%204-1%203c1%200%202-1%202-3%202-4%202-4%205-3l4%202c1%201-1%204-2%204h-3c0-1-1-1-2%201l-4%202-4%202c-2%202-2%202-4%201-3-1-4-1-4%201l-1%201v6h1l1%202c-1%205%206%2013%2010%2011%204-1%204-1%204%205%200%208%206%2012%2018%2010l9%201%203%201%203%201c1%202%202%202%203%201s2%200%203%202c2%204%207%205%2010%202%202-1%203%200%204%205%200%205%202%208%206%208l6%201h9l-3-1-2-1%202-2c3-4%209-3%207%200%200%202%200%202%203%200%205-4%207-4%2010-2l3%201-1-6a133%20133%200%20010-20c0-4%200-7-1-6l-1-1%201-1%201-2-1-2h-2l1-1c1%200%202-1%201-4%200-5%200-4-1-3h-2l1-1v-1l-4-1h-8l2-1%206-3%204-1v-6c0-5%201-7%202-7l1-5-1-5-5-2a317%20317%200%2000-12-6c0-1-5-6-7-6l-2-2-1-2-1-3c-4-6-3-6%2014-6h15V83l-7-1h-6V41l-1-40c-2%200-3%201-3%2011v70h-8c-9%200-12-1-8-2%202-1%201-1-3-1s-6%200-5%201l-2%204c-3%203-7%205-7%204-1-2-13-1-15%200-2%203-5%203-4%200h-1l-3%202%201-2c2-2%201-3-1-3l-4-2c-1-1-2-2-5-2h-4v-6c0-5%201-6%202-7v-1c-2-2-3-5-1-5h2v3l2%202%201%204%201%201h1c-1%203%201%205%201%202l6-13%204-2c3%200%203%200%203%204%200%203%200%204%202%204%202%201%203%205%201%207s5%207%208%206l3-1%201-1v-1c0-2%200-2%201-1h6c5%200%205-1-1-4-5-2-4-2%202%200%201%200%202%200%202-2v-3l-1-3c-2-3-2-3%202-3h3l-4-1-4-1h2v-1c-1-2-1-2%201-2%202-1%202-1%200-1-3%200-4-2-2-2v-3l-2%202-7%202c-8%200-9%201-6%203%204%204%204%204-1%201-6-2-7-4-4-4v-1h-3c1-1%200-1-2-1l-3-1-5-1h-6c0%202-4%201-4-1%200-3%201-4%202-2l3%201%205%201%203-1v-1l-2-1c-3-2-3-2-1-2s3-2%201-4v-1c2-2%201-3-2-6l-2-3v-3l1-3c2%200%202-1%201-4-2-3-3-4-2-1l-1%203-1%205c-1%204-1%204-4%201-2-1-2-2-1-14%200-13%200-13-2-13s-2%200-2%208M32%207c0%203-1%204-2%204l-1%201%201%201c1%200%202%202%202%206%200%205%200%206-4%208-5%205-9%206-9%204%200-3-1%200-2%204%200%203-4%209-6%208-1%200-2%2010-1%2014l1%202%201-2%205-2c5-2%206-3%205%200-1%202%208%202%2011-1%202-3%206-4%2012-5h6l-1-4-1-4v3c0%205%200%205-4%202-2-2-1-4%202-5l3-3c0-2%201-3%202-3%202-1%202-11%200-13-2-1-2-4%200-4v-1c-1-1-1-1%201-1v-1c-3-2-2-3%201-3l2-1h-3l-4-1-1-2-3-2c-2-3-3-3-4-1-2%203-5%203-5%200%200-2%200-3-2-3s-2%201-2%205m210%202l-1%2016-1%209c-1-1-3%200-3%201h-4l-1-2-1%202v4l1%204c2%200%202%200%201%201v1c2-1%202%200%201%202-1%205%202%204%203%200s2-4%205-4l5%202h2l2-1c2%200%202%200%201-1-2%200-3-3-1-3%201-1%201%200%201%201l1%201c1-1-1-8-3-8-1%201-1%201%200%200h-2v-1c1-1%201-1-1-1h-2V17c1-13%200-15-1-15s-2%201-2%207m-116%201c-16%203-29%2014-29%2025%200%2018%2032%2030%2057%2022l9-2%204%201%203%201-2-3-2-3%202-2c20-19-8-45-42-39M63%2029l-1%2012v1h5c0-2%204-1%204%201h1c1-2%205%200%204%202h-6l1%203%201%201%202%201%202%202-1%201h-4c-1%203-1%203%2012%203l13%201%201-2c0-2%200-3-2-2l-2-1v-1l2-2h-3l-1%202c0%203-1%204-2%202l-4-1c-2%200-2%200-1%201s1%201-1%201c-1%201-2%200-2-1h-1l-3-1c0-1-1-3-3-3l-2-2h3c2%200%203-1%203-2h2c1%202%202%202%203%201%202-3%202-6%201-7-3-2-2-3%200-3l1-2c0-1-1-2-2-1l-2-1c-1-1-11-2-13-1v2l-1%201-1%201-1%202-1-10-1-10v12m128-1l-2%205c0%201%200%202-1%201l-3%201c-3%203-7%203-7%200-1-1-1-1-1%201l2%205%202%204%203%206c3%204%203%206-1%207-3%202-5%205-3%204l4-2%201%201c0%201%201%202%202%201v-1c-1%200%200-2%202-3%203-3%204-4%202-3-1%200-2%200-2-2l-1%201c-1%201-1%201-1-2l3-4%201-3c-1-1%200-1%201-1%202%200%204-6%204-12-1-6-3-8-5-4m-81%2029l-1%204c-1%201-1%201-1-1%200-6-2%200-2%209l1%208h1l-1%201c-1%201%202%201%207%201%208%200%209-1%207-3s-2-2-1-3c3-2%204%200%203%203l1%203%201-2c0-1%201-2%203-2l2-1-1-1v-1c2-2%203-1%203%201%200%203-1%204-4%205-5%200-1%201%209%201%209%200%2012-1%208-1-7-2-7-4%200-5%205%200%205%200%205%203l-1%202c-4%200%205%202%2012%202%209%200%2011-1%2010-5-1-1-1-1-4%201l-3%201c0-1%203-4%205-4v-6h-3l-4-2c-2-3-5-4-3-2l-1%201-1%202h-2l-2%201c1%202%200%202-2%202s-2%200-1-2v-7l-7%201c-7%201-21%200-28-3l-5-1m158%2031l1%203v1l2%201h2v2h-1l-2%201h-1c-1-1-1%201-1%203%200%205%201%206%205%204h15v-5c1-7%200-14-1-12h-4c-3-2-6-2-3%200l1%202h-3l-3-2-1-1-3-1c-3%200-3%200-3%204m-47-2l-1%209c0%2012%201%2015%205%2012l3-2c1-1%202-2%202-6v-4l-2%203-2%203-1%201c0%203-3-2-3-5%200-2%200-2%201-1v-4c0-8%200-7-2-6m7%2024l-3%206-1%202h4c6-1%2010%201%2011%207%201%204%201%204%203%203%201-2%201-2-1-6l-3-4-1-2v-2l-5-4-4-4v4m9%2035v2l1%202h-1c-1-2-2-1-5%204-2%205-3%2013-1%2019l-1%202c-2%200-2%201-1%203h2l1%201-1%201h-1l2%202h7l5-1c2-1%202-1-1-1-6%200-4-1%202-1l6-1-3-1h-6c-5-1-1-3%205-3l8-1-6-1h-10c-3-1-3-1-2%201h-1c-2-2-2-2-3-1s-1%201-1-1l1-3c1%201%206-8%207-12l1-4v-3c0-3%200-3-1-1v-1c0-2%200-3-1-2h-1c0-1-1-1-1%201m16%204c-6%2011-5%2016%204%2018%208%202%2010%200%204-5-5-3-5-6-1-8%203-3%202-6-2-8l-3-2-2%205m-222%203c-2%202-2%202%200%206%203%205%207%205%2011%202%201-1%203-3%205-3l4-1-3-1-6-1c-7%202-7%202-7%200-1-3-2-3-4-2m62%2018l-4%206-2%201-3%201-8%203-5%203c2%200-5%208-10%2011s-9%203-10-1c0-3%200-3%203-3l4-1h-5c-7%200-7%200-17%2012-4%205-4%205-9%205l-7-2c-2-1-4-2-5-1l-1-1c2-2-5-3-10-1-2%201-3%202-3%205l1%203v1l-1%201%204-2c4-3%206-3%2011%201%204%203%205%203%2010%203%206%200%2013-2%2012-5l1-1h1l2-1c2-2%203-3%206-2%208%200%2010%200%2014-2l8-7c3-4%205-5%208-6l16-3c10%200%2018-8%2018-16%200-3%200-3-1-2-4%206-7%207-14%205l-4-1%203-3%202-4-5%204m193%2022c-2%200-3%202-1%202v3l1%203c2%200%203-2%201-2v-1c2%200%204%202%202%203v5c-1%201-1%201-1-1s0-2-1%200c-1%205%200%207%206%207h5v-4c0-3%200-4-1-3l-2%201h-1l-1%201-2-2c0-2%201-2%203-2l2-1%201-1c2%200%203-2%202-4v-2c3-2-7-4-13-2m-149%206l-1%202%201%209c1%201%203%202%205%201%204%200%204%200%204-2%201%200%201-1%200%200l-1-1%203-1c4%200%204-2-1-2l-4%201h-1l-2-1c-1-1%200-1%202-2h4l-4-2-4-2h4c4%200%205%200%205%202l1%201c1-1%201%200%201%201l3-1c3-3%203-4%200-3l-3-1c0-2-1-2-6-2-6%200-6%201-6%203'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.8045112781954886,"src":"/static/ec8d71e72a693f285baacab925a0bc81/0d359/20160205_py08.3_rps.png","srcSet":"/static/ec8d71e72a693f285baacab925a0bc81/5ae31/20160205_py08.3_rps.png 240w,\n/static/ec8d71e72a693f285baacab925a0bc81/88c65/20160205_py08.3_rps.png 480w,\n/static/ec8d71e72a693f285baacab925a0bc81/0d359/20160205_py08.3_rps.png 900w","sizes":"(max-width: 900px) 100vw, 900px"}}}}}},"pageContext":{"slug":"/python/python-game-rock-paper-scissors/","totalLessons":24}}}