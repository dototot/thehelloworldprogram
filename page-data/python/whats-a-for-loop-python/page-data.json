{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/whats-a-for-loop-python/","result":{"data":{"markdownRemark":{"html":"<p>You know what’s not fun? Doing the same thing over and over again. You know what is fun? Telling a computer to do it for you! That’s when you need a for loop.</p>\n<h2>What’s Iteration?</h2>\n<p>while loops are useful when you need something to run until a condition is met. Sometimes you know that condition at the start, but you need to repeat a process a certain number of times. Boring.</p>\n<p>Did you hear this adage growing up?</p>\n<blockquote>\n<p><a href=\"https://en.wikipedia.org/wiki/William_Edward_Hickson\">If at first you don’t succeed, try, try, try again.</a></p>\n</blockquote>\n<p>I did and it drove me crazy. But it’s true.</p>\n<p>When you are learning a new skill, such as riding a bike or tying your shoe, you probably won’t get it on your first try. So you’ll try again, learning from your earlier experiences. Eventually, after enough attempts, you’ll get it.</p>\n<p>That’s <a href=\"https://en.wikipedia.org/wiki/Iteration\">iteration</a>. You repeat a process until you achieve a desired result.</p>\n<h2>How Does a For Loop work?</h2>\n<p>Say you’ve got a group of ducks and you want to tag them as geese. In Python, for loops looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> duck <span class=\"token keyword\">in</span> flock<span class=\"token punctuation\">:</span>\n    duck <span class=\"token operator\">=</span> goose</code></pre></div>\n<p>We can write that out in plainer language. It helps to read this with a ridiculous British accent (unless you have a ridiculous British accent):</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> the first duck <span class=\"token keyword\">in</span> the flock<span class=\"token punctuation\">:</span>\n    make it a goose\n<span class=\"token keyword\">for</span> the second duck <span class=\"token keyword\">in</span> the flock<span class=\"token punctuation\">:</span>\n    make it a goose\n<span class=\"token keyword\">for</span> the third duck <span class=\"token keyword\">in</span> the flock<span class=\"token punctuation\">:</span>\n    make it a goose\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>And round and round we go until all of the ducks are goosed. In professional terms, each duck is an element and the goosing is the execution of the block. Let’s see this in practice, starting with one of my favorite things, strings.</p>\n<h2>For Loops and Strings</h2>\n<p>Let’s run a loop over a string.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> letter <span class=\"token keyword\">in</span> ‘word’<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>letter<span class=\"token punctuation\">)</span></code></pre></div>\n<p>We can write that out in pseudocode, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> every letter <span class=\"token keyword\">in</span> the string ‘word’<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span> the letter on a new line</code></pre></div>\n<p>Looping over a string will even process spaces, because spaces are considered characters:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> ‘<span class=\"token keyword\">for</span> loop’<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Why did I change the iterator to char? You will often see in code the use of char, or c, in reference to a character in a string. It’s a convention that you should be familiar with.</p>\n<p>We can do much more than print each character.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> ‘byting python’<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>AWESOME!</p>\n<h2>Home, Home on the Range… Function</h2>\n<p>The range() function let’s you set, well, a range of numbers to process. Like chocolate syrup on vanilla ice cream, it tastes great with for loops. Try this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> number <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span></code></pre></div>\n<p>So far, the for loop examples we looked at process small ranges. But for loops are most useful when crunching large collections of elements and big numbers. Do you know the parable of the rice and the chessboard?</p>\n<blockquote>\n<p>If a chessboard were to have wheat placed upon each square such that one grain were placed on the first square, two on the second, four on the third, and so on (doubling the number of grains on each subsequent square), how many grains of wheat would be on the chessboard at the finish?</p>\n</blockquote>\n<p>In IDLE, create a file called rice.py:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">rice <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ntotal <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    total <span class=\"token operator\">+=</span> rice\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The amount of rice on square\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"is: \"</span><span class=\"token punctuation\">,</span> rice<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>“Out total amount of rice <span class=\"token keyword\">is</span><span class=\"token punctuation\">:</span>”<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span>\n    rice <span class=\"token operator\">=</span> rice <span class=\"token operator\">*</span> <span class=\"token number\">2</span></code></pre></div>\n<p>Press F5 or select Run. Hope you’re hungry!</p>","excerpt":"You know what’s not fun? Doing the same thing over and over again. You know what is fun? Telling a computer to do it for you! That’s when…","frontmatter":{"lesson":23,"title":"What’s a For Loop For? Python!","category":"Python","video":null,"image":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='222'%20viewBox='0%200%20400%20222'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%209c0%205%200%208%201%207l2-2v-3l-2-1%202-1%201-1h2v3l1%204c1%200%202%201%202%203%200%201%200%202%201%201l1-1%201-4h1c1-1%201%202%201%206v7l2-4A228%20228%200%200128%204l1%203%201-3h2l1%202c1-5%201-6-5-6-5%200-5%200-7%204s-5%207-4%203c3-6%203-7-1-7l-4%202H9L7%200C5%200%205%200%206%201v4C5%207%205%206%205%203c0-2-1-3-3-3S0%200%200%209m37-6v3l1-1%201-2c2%200%202%201%201%203v4c2%201%203%206%201%207l-1%202-2%203-2%203-1%203c-1-1-4%200-4%202l-1%202h-2l-1-1-1%201-2%202c-3%203-1%205%204%204%208-1%2010%203%204%209-4%205-5%208-4%2012%201%202%201%202%202%201s2-2%203-1v1l-1%201h2l1-3%201-2c1-1%201%200%201%202l2%206v-3c-1-10%2012-10%2022%200l3%204c0%202%202%202%205%201l3-1-3-2c-2-3-2-9%200-9%201%200%202-1%206-9v-5l-4%209-1%203-1-2c-2-3-2-3%200-5l2-4h-1c-1%201-1%201-1-2-1-2-1-2-2%202-2%206-2%202%200-5%202-4%202-5%202-3a231%20231%200%20014-24c1-9%201-11-1-6l-2%203-1%2011c0%2010%200%2010-1%204l-1-7v7l-1%209-4%2016c-1%201-1%201-1-1l2-8v-5l-1%204a94%2094%200%2001-5%2013l-2%201v-1c2%200%201-2-1-1l-7-1c-4-1-5-2-5-3l1-3%203%201c6%203%207%203%208%201V32l-1%202c-1%201-1%200-1-2%200-3%200-3%201-2s1%201%201-2%200-3-1-2c-3%203-3%2011%200%2011v1c-2%201-3%200-4-4%200-4-2-7-2-5%200%203-2%202-3%200v-9l2-1c1%201%201%201%201-1-1%200-1-1%200%200l1-8%201-5V0c-2-1-3%202-2%205%200%201%200%202-1%201-1-2-2-1-2%202l-1%202V3c2-2%202-3%201-3l-2%201h-2c-2-1-2-1-3%202m165-2l-1%202-7%2026c-1%201-1-1-1-5v-6l-1%205-1%2013c0%206%200%209-3%2018a118%20118%200%2000-5%2016l-1-3-2-3c-1-1-1-2%201-4v-4c-2%202-7%2015-6%2015v6l-1-3-1-2-1%202c-1%203-1%203%203%205a192%20192%200%200042%2011l15%203h1l2-1%201%201c-1%201%200%201%201%201%202%200%202%200%201-1l4-3c6-2%208-2%207%201l1%201%201-1%201-1c1%201-3%209-4%209l-3%201-2-2c0-2%201-3%202-2l2-1%201-2c0-1%200-2-2-1-4%200-4%201-4%205l-1%203c-2%201%200%206%202%206%202%201%202%201%200%201-3%200-9-5-7-6%201-1%201-3-1-3v1l-1%201v1l-1%201-2-1-2-1v1l-2%201-3%201h-3c-2-2-4-1-9%200l-7%201-2-1-5-1v-1c2%200%202%200%201-1-1-2-1-2%202-2l3-1c-2-2%201-1%204%201%201%201%203%202%204%201%202%200%202-2-1-2l-6-3c-6-4-8-4-7%200l-3%201c-3%200-3-1-3-2s-1-2-3-2-3%201-2%202v2l5%202c5%200%205%200%203%201l-8-1h-5c0%201-7-1-9-3l-6-2c-3-1-3-1-3%203%200%201-1%201-2-1l-4-2-2-1c-1-1%200-2%201-2v-1h1c3%200%204-3%201-4-2-1-3-3-1-3%209-1%2011-2%208-3v-1c2%200%203-2%201-2l-1-1v-1h-2c-2-1-2-2%201-5l5-5c5-4%2014-15%2010-12v-3c3-10%200-19-6-19-3%200-3%200-3-3v-4l5-1c7-1%207-2%203-4l-4-3c-3-2-8-3-10-2-1%201-1%201%202%201%201%200%202%200%201%201-2%201-1%202%202%202%202-1%203%200%201%203-1%201-9%200-9-2%201-3%200-3-2-1-2%204-1%207%203%2011%204%205%204%206-3%2010-5%202-8%205-13%2010l-6%206h-2c0%202%200%202-1%200-1-4%200-7%201-5h1v-2c-2%200-3-6-3-13l-1-6v14l-1%2014%201%202%202%203-4%205c-2%205-3%206-2%207v2c-2%201-2%201-3-1l-1-3-3-3v2h-3l-3-1-2-2-2-3-1-3c-1-3-6-8-8-8l-1-1%201-2%201%201%202%201%201-1%202%202%202%201c0-2-3-5-4-5h-1l-3-1c-3-1-4-2-4-9l-1-5%201%203c1%204%206%207%205%203l-1-5c-1-4-4-6-4-3l-3-4c-3-6-3-6-3%204l-1%2012c-1%203-1%201-1-7%201-11%201-11-1-8-3%206-3%208-2%209%202%202%203%209%201%2011l-2%205c-2%204-2%204%200%204%203-2%2014-2%2015-1%200%202-2%203-4%202l-2%201v1h-3l-10%204c1%201-3%203-5%203h-2c-1%201-20%206-25%206s-7-2-4-3l3-1-3-1h-6c-2%201-12-1-13-3-2-2-3-1-2%200%202%202-3%203-5%202-1-1-4-2-9-2l-9-1v-1l2-1c-1-2-8%202-8%204s0%202%202%201h3c1%202%202%202%203%201l-1%203%201%202%201-1%201-2%202-1c1-3%203-2%202%201%200%202%200%202%201%201%201-2%201-2%201%203%201%202%200%205-1%206l-1%209%201-3%201-2%202-4c2-9%202-10%203-6v4c-1%202-1%202%201%202%201-1%202-1%202%201v4l-1%207c-3%205-2%205%202-1l4-5-2%205c-6%208-10%2019-8%2019l3-4%2014-17-6%209c-7%209-9%2015-3%208a7006%207006%200%20015-3l6-3c7-6%2011-6%205-1-3%203-7%2012-6%2014%202%201%2019-10%2020-13%200-2%202-5%204-5v3l5-6%203-3%202-4%203-5c2%200%202%203%201%206l-2%205-10%209c-6%204-6%205%200%203%208-3%2014-6%2016-9v-2l-2%201%207-13%206-9-2%201-3%203v-3c1-3%203-7%203-5h2l4-3c2%200%202%200%201%202-3%204-3%206%200%204l2-3c-2-1%201-3%203-2%205%201%206%203%203%207-2%203-2%204%201%201%202-1%202-1%202%201l-1%205-1%204-1%204c-2%203-2%204-1%204v1l2-1c2-1%203-4%203-6l2-3%201%202c-3%2010-2%2012%201%205s4-8%203-3v5l2-4%202-5c0-1%201-2%203-2h2l-2%202-2%203v3l-1%201c-1-1-1-1-1%204l-2%202c-2%200-5%206-4%208l-2%202%201%202%202%203h-1c0-2-3%204-3%207l-1%202-3%202-1%203c1%200%200%202-2%203-4%204-2%206%203%204%203-1%203-1%203%201-1%201%203%201%204-1h1l1%202h1c0%202-4%204-10%206l-11%205-27%2019c-3%202-6%205-10%206-3%200-5%202-5%202%200%202-3%204-7%205h-5l2%203v4l1%201%201-1h2l6%202h4c5%201%207-1%202-2l-3-2-2-2c-2%200-3-1-3-2l19-1c19%200%2020%201%2019%203l-1%202-1%205c1%205%204%207%2010%207%202%200%203%201%203%202l1%205v4l-4-1-5-3-4-1v1l2%204c1%203%202%203%205%203%205%200%207%201%205%204-2%204%200%206%207%207l7%201c3%200%203%200%203-2-1-3%203-5%206-5%204%200%201-2-3-3l-4-2v-2h-3c-2%202-4%202-4-1%201-1%200-1-1-1-3%200-3-2-2-7%201-3%204-6%207-6l5-3c3-2%204-3%205-2%200%201%204-2%204-4l4-2-2%204v1l-1%203-1%202c1%201%203-2%205-7l5-11%203-9v-2l-2%202c0%202-2%203-2%203l-1%202c1%201%201%201-1%201h-1c1%201%201%201-1%202-2%200-2%200-1%201v1l-2%201h-2l-2-1c-1-1-1-1%201-1v-1c-1-1-2%200-3%201h-2v2l-1%202c-2-2-1-5%202-6%202-1%203-4%202-4-2%200-6%202-5%203l-1%201-2-4c0-2%200-2%201%200l1%203v-3l4-4%201-1c-2%200-4-3-3-5v-4l-1-3%201-2c0-3%200-4%202-3v-4h-3l2-2v-1c-2%200-2%200-1-1l1-7c0-1%201-2%202-1%201%200%202-1%202-4%200-2%200-3-1-2s-1%201-1-1c0-3%202-4%203-1l2%203c2%202%203%205%201%205l-1%201%202%201c2%200%202%203%201%204v1c2-1%204%204%203%205l1%201c1%200%204%209%204%2014s2%206%202%202v-3l-1-4c1-2%200-4-1-5s-1-6%202-8h1c-1%203%202%204%202%201l3-2%201%201c-1%201%200%202%202%202l5%203c2%203%204%202%202%200l3-1c4%201%208-2%205-4-1-1-1-1%201-1h3c0-1-1-2-6-2-6-1-10-10-4-10l5-1%202-2-3-3-4-3c-1%200-3-3-2-5%202-3%2012-6%2015-4v12l-1%204%201%206v7c-2%202-1%203%203%203%204%201%204%203%201%206-2%202-2%202-1%203l1%201h4c0%202%203%205%204%204l-2-5c-4-7-2-16%204-22%204-4%206-8%206-9-2-2-4-1-6%203-3%206-6%205-3-2l2-8c0-6%204-9%2010-7%204%201%205%205%205%2014l1%209h5c7%200%2012%201%2017%203l3%201-2%204c-4%204-4%209-3%2015%201%204%202%205%207%207%207%204%207%204%205%206l-1%202%202-2c2-2%202-2%208%201l12%205c4%201%205%202%205%204%201%203-1%205-4%205-2-1-7%201-9%203l2%201%203%201c0%202%202%202%2010%202a382%20382%200%200121-1v-1c2%201%202%200%202-2v-2l-1-2c-3-2-5-2-12-2l-8%201v-3c0-3%200-3%207-5l7-3h-2c-5%201-23%201-24-1-1-1-2-2-3-1l-2-1-1-1c-5%200-8-7-6-10%201-1%202-3%201-5l1-2%208%204%203%201%207%203c2%201%203%201%206-1l5-1c0%201-1%202-3%202l-3%202h3c2%200%202%200%201%201-2%201%200%202%203%201l4-1c3%200%2010%203%2010%205l4-2%207-4c3-1%206-6%205-8s-5-3-7-2c-1%202-1%202-4-1l-11-5c-8-4-9-5-3-5%203%200%205-1%206-3l4-2-1%202v1l9%201%209%201-3-1-10-3%203-1%203-1%202-3h1v3l1-3%201-5%201-3h-1c-1%201-1%200-2-3%200-7-2-7-1-1%200%204%200%205-2%206h-2l-2-1-2-1-2-2-1-1c0-3%202-3%204%200%203%204%205%203%203-1l-2-4%203-1c2-1%203-1%203-3-1-1%200-2%207-3%208-1%2015-3%2015-4l-7%202c-9%202-32%202-43%200-7-2-8-2-12-1-4%202-4%202-4%200%202-4%202-5%200-6-4-2-12-10-14-14-3-6-3-9-2-15%209-30%2071-38%2098-13%209%208%2012%2017%208%2026l-1%204c1%201%204-7%204-10%200-4%200-4%205-4h13v1l1-1%2017-1h18c2-2%201-18%200-17l-2%202-3%202v-1c1-1%201-1-1-1-3%200-3-1-2-5v-4l-1%201-5%207-1-2-1%202c-1%204-3%204-2%200l-1-2%201-2c2-2%203-4%201-4a4215%204215%200%2000-5%201l-1%201-1-2c0-1%200-2-1-1l-1-1%201-1v-4l-1%202c-1%202-1%202-3-1l-1-3c0%202-2%201-3-1v2a208%20208%200%20011%208l2-1h1c0%202-3%202-5%200-3-3-3-3-3%201l2%202v1c-2%201-2%202-2%206s0%205%201%204%201-1%201%201l-1%203c-1%201-1%201-1-1l-1-2-2-2-1-5-1-2-1-3-1%204c0%206%200%207-1%205v5c0%207%200%207-2%207-1%200-2%200-1-1%200-2%200-2-2-2l-2-1v1c0%204-2%204-3%200s-9-14-13-16l-3-1%203-4c4-4%203-4-2-1l-3%203-9-4-8-3%201-2h-2l-3%202%201-3%204-1c0%201%202%200%203-2l8-8c6-4%207-6%204-4h-4l-4%203c-16%2015-16%2015-20%2014l-3-1%204-6a180%20180%200%200123-24l-4%203-4%202-1%201-3%202-14%2012-12%2011v-1l4-7%204-6c2-2%203-5%202-5l-2%202-2%202c-1-1%206-11%209-14l2-2c-2%200-11%207-10%208l-2%206c-8%2014-11%2018-12%2018-2%200-2%200%200-2l5-9%205-9%202-3-4%204-21%2019-2%201-2%201c0-2%207-10%209-11l1-3c0-2-5-2-5%200l-2-3c-1-6%200-8%208-13%205-3%206-4%204-4l-6%202-3%202-5%203c-5%203-6%204-5%201h-1c-1%201-3%202-3%204l-12%209a150%20150%200%2000-15%2011l1-30c1-4-4-2-6%202-7%2013-8%2014-6%204l1-8c-2%200-4%205-6%2015l-3%206%202-18c0-3%200-3-2-3l-3%201m15%2018c-5%209-6%2013-7%2019l-1%209-2%203c0%202%206-6%208-12%202-5%202-5%202-2%200%201%200%202%201%201l2-3%202-7c0-6%200-6-2-4l-1%203%201-3v-5l1-3v-1c-1%200-3%202-4%205m-21%2024c-2%200-4%204-4%207l-1%203v1c0%201%201%201%202-1%201-1%201-1%201%201v2c0%202%202%201%202%200v2c0%204%200%204%201%203s2-2%201-3h1l3-3%202-3%201-3%202-4c1-4-4%202-5%206-1%205-3%205-2%200v-5l-1-2-3-1m159%2024l1%203%202%201%203-1c2-2%209-3%209-1h5l4%201-1%201h-4c-3%202-3%202-1%202h2l3-1%204-1c1-2%204-3%205-1v2c-1%201%200%201%203%201s3%200%202-1l-2-2h2c-2-2%201-5%203-5%203%200%205%202%203%204l1%201%201-3v-3h-17c-14%200-17%200-18%202l-2%201-1-1c0-2-1-2-3-2-4%200-4%200-4%203M59%2076l-9%203-2%203c-2%202-2%202-1%203s2%200%206-3c5-5%205-5%200%202l-2%205h1c0-2%204-5%205-5v3l-1%202h2c0-2%202-3%203-4l1-3h2c0%202%201%202%201%201l2-3c2-2%202-2%200-3-4-3-4-3-8-1m37%2011c-2%205-3%206-4%205-2%200-2%200-1%202h-1l-2-1%201%202c1%201%200%207-3%2010h-2c-1-1-1-1-3%201a121%20121%200%2001-7%209l-2%203c-5%205-4%208%200%204l11-8-4%206-5%205%202-1c2-3%202%200%200%203l-3%202-3%202c-8%209%200%204%2013-9%207-6%2010-9%209-6-2%202%200%201%203-1l4-6c0-2%200-3-1-2s-1%201-1-1c-1-3-1-3-4-2h-2l4-8v2l1%201%201-3c0-1%200-2-1-1l1-7c3-7%202-8-1-1M6%2087l-2%205-2%202v-2l1-4H1l-1%209v8l1-4%202-4v3l-1%209c-1%209%201%208%205-3%204-9%204-11%201-10-2%200-3-1-1-6%201-5%201-6-1-3m356%201c-2%200-3%202-4%203-2%202-2%202%200%202%201%201%202%201%201%202l1%202c2%202%201%203-3%207-7%207-7%2012-2%2017l2%205%201%203v1c-1%201%200%201%202%201%207%202%2011%202%2011-1l3-1%205-1c2-1%208%200%209%202%202%202%206%202%205%200v-1l2%201c1%202%202%200%201-3l1-3c2%200%202%200%203-15%200-11%200-12-1-11l-2%201-8%202c-10%200-15%202-20%204l-4%201%203-6c3-6%203-6%202-9-2-4-5-5-8-3m-225%201l9%2012c3%203%203%203%202%205h-2c0-1-11-2-14-1s-5%206-3%205c1-1%202%200%202%201l4%201%204%202h2l1-1v-5c0-2%200-2%201-1%201%202%202%202%203%201%202-1%202-1%203%201%202%203%203%202%203-3%200-3%200-3%201-2s3%201%206-1l3-1-3-2-5-1-1-1-1-1-5-2c-1-2-3-3-3-2l-1-1-1-2h-3l-2-1M18%2092l-2%204-1%203-1-2v-2l-7%2021%205-5%205-7%201-3%201-11-1%202m65%202l-4%204c-2%200-8%207-8%208h-2v3h-3v4c2%200%2012-7%2012-8l4-3c3-2%204-4%205-7%201-6%201-6-4-1m292%2071l5%207%201%201%204%202%203%201h-4c-3-1-3-1-3%201%201%202-1%201-4-2l-3-1h-4c-6-2-6-1-3%202s4%204%205%202c2-2%205-1%207%202%201%203%201%203-1%206-3%204-1%204%203%200%202-3%203-3%206-3%204%201%2010-1%2010-4%200-2-4-7-5-6v2c-2%200-12-9-13-11l-2-1-3-1-2-2%203%205m-156-3v2c2%204-4%204-8%201-3-1-4-2-5-1l-4%201c-2-1-3%200-4%201l-2%201c-3%200-2%202%201%202l3%201h8c1-1%201-1%201%201-1%201%200%202%201%202l1-1h1c1%202%208%202%2010%201l3-1v-2l-1-1c1-1%202%200%203%201l3%202h3c2%201%202%201%201-1l1-3c1-1%201-1-1-1-1%201-2%200-2-1l-1-1-1%201-3%201c-4%200-4%200-3-3%200-3-1-4-5-2m150%2022l-9%201c-3%200-3%201-3%204%200%204-2%204-11%206h-6l2%202%202%203%202%201%202%201h9c9-1%2017-2%2021-1%202%201%203%201%203-1s0-2-2-1c-1%201-1%201-1-1l-2-1h-4l-1%201c-3%200-2-2%201-3%201-1%202-2%201-3%200-1%200-2%202-2v-1l-3-2-1-2-1-2-1%201'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.8045112781954886,"src":"/static/6ad347bf674512bc0c5dbf05b867165a/104b3/20160225_py09.1_for_loops_ducks.png","srcSet":"/static/6ad347bf674512bc0c5dbf05b867165a/5ae31/20160225_py09.1_for_loops_ducks.png 240w,\n/static/6ad347bf674512bc0c5dbf05b867165a/88c65/20160225_py09.1_for_loops_ducks.png 480w,\n/static/6ad347bf674512bc0c5dbf05b867165a/104b3/20160225_py09.1_for_loops_ducks.png 960w,\n/static/6ad347bf674512bc0c5dbf05b867165a/5edad/20160225_py09.1_for_loops_ducks.png 1229w","sizes":"(max-width: 960px) 100vw, 960px"}}}}}},"pageContext":{"slug":"/python/whats-a-for-loop-python/","totalLessons":24}}}