{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/python-strings-characters/","result":{"data":{"markdownRemark":{"html":"<p>“Hello, World!” Do you remember our first program? We used the print() function to output a line of text. The phrase “Hello, World!” is a string, and a string is a sequence of characters. We create a string by wrapping a sequence of characters in quotation marks. Even a single character is considered a string. So it follows that a string of multiple characters is a string of strings. Which begs the question, which came first? The string or the character? The string was the characters idea for making more characters! But what exactly is a character? Do you remember our discussion on natural languages? Characters are units of information used in the written form of a natural language. Letters, numbers, punctuation marks, and even whitespace are characters. Why are they called strings? Why is a raven like a writing desk? I don’t know. But it might be useful to imagine yourself <em>stringing</em> characters together, one after another, like beads on a necklace.</p>\n<h1>Python Strings</h1>\n<p>Let’s begin. Open IDLE:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span>\nHello<span class=\"token punctuation\">,</span> World!</code></pre></div>\n<p>That was our first program. Do you remember the rush of excitement you felt when you saw those words returned on the screen? Neither do I. Regardless of what some robots will tell you, computers are totally dumb. You have to tell them what to think. So let’s try this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You are the best\"</span><span class=\"token punctuation\">)</span>\nYou are the best</code></pre></div>\n<p>Ooh, my computer thinks I’m the best. Does yours?</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You are super smart\"</span><span class=\"token punctuation\">)</span>\nYou are <span class=\"token builtin\">super</span> smart</code></pre></div>\n<p>Why thank you, computer.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You are a force of nature\"</span><span class=\"token punctuation\">)</span>\nYou are a force of nature</code></pre></div>\n<p>Flattery will get you everywhere.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>\"Python <span class=\"token keyword\">is</span> my favorite language<span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>\"Python <span class=\"token keyword\">is</span> my favorite language<span class=\"token punctuation\">)</span>\n                                         <span class=\"token operator\">^</span>\nSyntaxError<span class=\"token punctuation\">:</span> EOL <span class=\"token keyword\">while</span> scanning string literal<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>stdin<span class=\"token operator\">></span></code></pre></div>\n<p>What happened here? I was getting such great praise. Let’s look at that again.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>\"Python <span class=\"token keyword\">is</span> my favorite language<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Do you see what’s missing? We need to close our statement with quotation marks. Let’s try it again.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Python is my favorite language\"</span><span class=\"token punctuation\">)</span>\nPython <span class=\"token keyword\">is</span> my favorite language</code></pre></div>\n<p>That’s more like it. And of course it’s your favorite language, computer.</p>\n<h2>You Can Quote Me on This</h2>\n<p>Now you can use single or double quotes to enclose a statement. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Single'</span><span class=\"token punctuation\">)</span>\nSingle</code></pre></div>\n<p>And</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Double\"</span><span class=\"token punctuation\">)</span>\nDouble</code></pre></div>\n<p>But you can’t mix quotation marks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>'Dingle\"<span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>'Dingle\"<span class=\"token punctuation\">)</span>\n                  <span class=\"token operator\">^</span>\nSyntaxError<span class=\"token punctuation\">:</span> EOL <span class=\"token keyword\">while</span> scanning string literal<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>stdin<span class=\"token operator\">></span></code></pre></div>\n<p>Or like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>\"Souble'<span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>\"Souble'<span class=\"token punctuation\">)</span>\n                  <span class=\"token operator\">^</span>\nSyntaxError<span class=\"token punctuation\">:</span> EOL <span class=\"token keyword\">while</span> scanning string literal<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>stdin<span class=\"token operator\">></span></code></pre></div>\n<p>Whichever quotation marks you choose, you must use the same kind. But, you ask, what if I want to print quotation marks? Easy. You simply wrap your quoted statement in the other type of marks. For example, I wrap my print statement in single quotes to be able to output double quotes:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'I said, \"You are the best!\"'</span><span class=\"token punctuation\">)</span>\nI said<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You are the best!\"</span></code></pre></div>\n<p>I know. I heard you the first time, computer. You can also quote quotes like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I said, 'You are super smart.'\"</span><span class=\"token punctuation\">)</span>\nI said<span class=\"token punctuation\">,</span> <span class=\"token string\">'You are super smart.'</span></code></pre></div>\n<p>You just keep telling me that, computer. And that’s it kids. You learned how to use the print() function in Python. It should keep you entertained for about 3 minutes. When the excitement wears off, <a href=\"https://thehelloworldprogram.com/python/python-string-operations-concatenation-multiplication-indexing-slicing/\" title=\"Python String Operations: Concatenation, Multiplication, Indexing and Slicing\">perform string operations in our next lesson</a>.</p>","excerpt":"“Hello, World!” Do you remember our first program? We used the print() function to output a line of text. The phrase “Hello, World!” is a…","frontmatter":{"lesson":8,"title":"print(“Python Strings & Characters”)","category":"Python","video":null,"image":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='222'%20viewBox='0%200%20400%20222'%20preserveAspectRatio='none'%3e%3cpath%20d='M25%2012L0%2026l6-3%2018-7c-1%201%200%201%201%201v-1c-1-1%200-2%202-3%203-1%204-1%202%201l-1%202-13%208C2%2030-1%2031%200%2033l9-5%209-3%201-1%2024-13L64%200l-4%201h-5c-1%200-1%201%201%201%201%201%200%201-2%201-4%200-4-1-2-2%205-4-5%200-27%2011m52-6v7h-9C40%2015%2015%2027%207%2041c-3%206-4%2016-2%2022%205%2012%2025%2024%2047%2029%2011%202%2039%202%2050%200l8-2%204%203c6%204%207%204%205-1v-5c3-2%204-1%204%201%200%204%205%207%209%207%203-1%203-1%202%202l-2%204c-1%202-4%2010-4%2016l-1%204%202-3c2-2%202-2%204%200v-2l1-5%201-4%201-1h2l-1%201%201%201c2%201%202%202%200%207-1%202%202%201%203-2l2-2%208-4c11-7%2014-7%2020%200%203%204%204%207%201%2011v4c4%203%208-7%205-12l-2-7c0-5%200-5%202-4%201%202%202%202%203%201%201-2%207%201%207%203%200%203%204%208%206%208v-3l1-1-1-2-1-2v-1l-1-4%201-4%205-3c5-4%208-4%2015%203l4%201%202%201h2l1%202%203%203c2%203%203%202%202-3-1-6-1-8%201-6h2l2%202%201%206%202%202c1%201%201%200%201-2%200-5%202-7%207-8h6c2-1%206-4%206-7a429%20429%200%200049%2016%205155%205155%200%2001-39-15c-6-2-9-4-12-7-4-4-7-5-7-2l-2%202-1%201v2c-3%202-7%201-10-1-1-1-1-2%204-2%206%200%207-4%203-8-1-2-1-2%204-4l10-5a760%20760%200%200144-23c3%200%2022-10%2021-10l1-1%203-1%205-2c1-1%201-1-1-2s-2-2-2-12V0l-1%2011v12c2%201-5%204-32%2018a4528%204528%200%2000-50%2024c-6%202-6%202-6%200a556%20556%200%200128-15l-27%2012a777%20777%200%2001-3-29v32l-1-3-2-1h-8a561%20561%200%2001-2-39v23l-1-22a494%20494%200%20000%2025v12h-4l-5%201-2-28-1-21v1c1%202-1%201-12-3-10-4-11-5-11-7l-1-3-1%204c0%203%200%203-2%203-3-1-18%201-17%202l-2%201h-10c-6%201-7%202-4%202%202%201%202%201-1%201h-6l-6%201c-7%200-22%202-21%203l-2%201-17-4-1-7c0-6%200-7-2-7s-2%201-2%206v7h-4c-3%200-4%200-4-2%201-7%200-11-2-11s-2%201-2%206m101%204l-9%201a889%20889%200%2000-45%207l9%203c3%200%203%200%201%201l-2%201h2l3%201h1v-5l2%201%201%201%201-1%201-2%201%202h1c3-2%208-1%207%201%200%202%200%202%202%202l3-1%201-2%201-2v2c0%202%201%203%202%201v-1c-1-1%200-1%201-1l3%201h2l4-1%2011-1-1-1-2-1h2l1-3V9l-4%201m6%203l1%204%201-1h1c2%200%202%201%201%202-1%202%204%205%2015%209%204%202%204%202%203-4%200-4-2-6-15-11l-7-3v4M60%2016c-22%204-37%2010-46%2020-18%2017-7%2040%2025%2051%2018%206%2044%207%2062%203l9-2%203%203c5%203%205%203%204-1v-4l9-4c37-19%2028-51-19-64-9-2-39-4-47-2m102%209a1076%201076%200%2000-23%204c-2%200-2%200%202%205%2010%2010%2012%2021%207%2031l-3%204%204%201c4%200%207%201%207%204%200%201%201%203%204%204%205%202%2012%208%2012%2010v1c1-1%203%202%202%204%200%202%203%203%204%202h2v1l7%203v-1l2-4%202-6c0-2%200-3-1-2l-1%201-3%202h-2c0-1-1-2-3-2-4%200-6-2-4-3h4l3-1c1-1%202-2%203-1l3%201c2%200%202%200%201-2-2-2%209-13%2015-13%202%200%202-6%202-21l-1-14-11-5c-13-7-12-6-34-3m205-2v2h1l-2%201c-2%200-2%201-2%203%201%202%200%203-1%203l2%201c4%201%204%203-1%203l-4-1c1-1%201-1-1-1-2%201-8-1-13-3h-2l-1-1-6-1c-1%201%202%202%2017%206l8%203%201%201c3%200%204%200%204%203v4l-1-3c-2-3-2-1%200%204l1%2011-1-1c-1%205-1%206%201%207l2%201%201%203c0%203%200%203-2%202l-5%201-2%201h6l-4%201c-4%201-6%203-5%205h-3c0%201%204%205%206%205l-1-2c-3-3-2-3%203%200%207%205%2027%204%2026-1v-3h-2c-2%200-2%200-1-1s-3-4-6-5c-5%200-5%200-1-5%205-7%206-10%203-9l-3%203-1%202-4-4-4-7v-2l3%202c3%204%204%204%204%201l3-3%201%201c-1%201%200%201%201%201l1-1%201-2c2-1%201-3-2-3v1l1%201a621%20621%200%2000-3-1c0-3%200-3%203-2h5c1-1%201-1-1-1h-4l-1-1c1-1-2-2-5-2v1c2%202%201%203-2%202l-3%201h-1l-1-2-1-1%202-2-1-1c-1-2-1-2%201-3%202%200%202%200%200-1-1-2-1-2%201-4l2-2h-2c-2%200-2%200-1-1%202-1%202-1%200-3-1-2-3-3-4-1m-64%2021l-23%2011c-23%2012-25%2013-24%2017%201%202%2039%2015%2042%2013l44-23c6-4%204-5-16-12s-20-7-23-6m-13%2010l-16%209%203%202c3%201%204%200%2020-8%209-4%2016-9%2015-9-3-3-7-2-22%206M148%2079h-1l-1%201v1h-1v1l-3%201%202%201h3v-1c-1-2%2019%204%2023%207%203%203%201-1-3-4-5-4-8-6-11-6l-2-1c1-1%200-1-2-1l-4%201m242%201c1%201%200%202-2%204-1%201-3%202-2%203h-1l-9-1h-5l8%201h6l-7%201-7%201h9c4%200%208%200%207%201v1a84%2084%200%2001-23%200l-1%202-1-1c1-1-2-2-3-2l1%201v1c-1%201-1%201%201%201h3l1%201c-1%201%204%202%2012%202%207%200%2010-1%2014-3%204-1%202%204-2%207l-2%202h-2c-5%200-6%202-1%202%203%201%204%201%207-3%205-6%205-9-1-13l-3-1%202-2c3-2%204-5%202-7l-1%202m-97%2028a422%20422%200%200046%2017%20770%20770%200%2000-46-17m-48%202c-4%200-2%202%202%201%206%200%207%201%203%204-3%204-6%204-4%201v-3l-1%201c0%201-4%206-9%2010-8%205-3%204%205-1l7-4%205-5c2-2%203-2%204%200%200%203-3%206-9%2010l-5%204c1%201%2012-7%2015-11%202-3%202-3%202-1%201%204%201%204-2%207-3%204-2%205%201%201%203-2%203-2%203%200%200%201-2%204-5%206-11%2011-14%2014-10%2014l9%202c0%204-5%2010-7%2010h-6c-3%200-4-1-2-4l1-3-3%204c-2%204-2%2011-1%2016l-1%202-1-1v-1l-1-9c0-10%202-14%2013-25%2010-10%209-10-2-1l-10%2013c-1%203-3%205-4%205v4c0%202%200%202-4-1l-4-7v-3l2%203%204%204-2-4c-3-5-5-13-4-17%200-2-1-3-4-2-3%200-4%204-5%2013l-2%2012c0%206-2%209-4%209-3-1-5%202-2%203%202%202%201%202-4%202l-4%201h-3l-1%201v1l-1%201-2%203-1%201c2%200%201%202-3%204l-4%202c0%201%201%201%203-1%203-1%203-1%203%201%201%202%209%205%2015%205l6%202h2l-2-2-2-2h2l4%202c2%203%209%2017%209%2020%200%202-4-1-6-5s-2-4-2-2%200%202-2-1c-3-4-2-6%201-2%202%202%201-1-1-4-1-3-1-3-1-1%201%202%201%202-2%202-9-2-12-3-15-2-3%200-4%201-5%203-1%205-15%2014-23%2014-4%200-4-2%200-3l6-3%203-2c2%200%2015-8%2014-9l-2-1-4-1c-2%200-2%200-1%201%200%202-4%206-5%205s2-8%203-7l1-1-2-2v-1l2-4c0-1%200-2%202-2l1-3%202-4%202-3-3-1c-2-1-2-1-2%201a1614%201614%200%2000-9%200v-2l-1%201-3%204c-2%202-2%202-2%200s-1-2-3-2c-3%200-4%203-1%204l2%202h-3c-1%201-3%202-5%201h-3v-7c0-5%200-7-1-5-1%201-1%201-1-1-1-6%201-9%208-12%208-5%206-5-2-1-5%203-6%203-6%201l22-13c22-11%2026-13%2023-13a728%20728%200%2000-47%2022c0-2-6-5-6-4l1%201%204%205c3%206%202%2010-2%2014l-3%203v-7c1-6-1-15-2-15l-1-1-1-2h-2a432%20432%200%2001-1%208c2-5%203-4%202%202%200%205-4%2014-5%2014l-1%201c-2%203-5%204-7%201-3-2-2-2%202-4%205-3%206-5%202-10l-3-4%202-2c3-3%202-4-2-2-2%202-2%202-7-2-8-7-14-14-12-16%201-2%203-2%203%200l7%205%209%205%202%202c0-2-6-7-11-9l-4-2%203-1c3-2%206-5%204-5l-1%201-7%201h-8l-2%201-4%202-8%205c-4%203-9%209-9%2011s-2%201-3-1c-1-4-5-7-9-7s-13%204-14%206l-6%205c-6%203-10%206-13%2011-4%205-2%209%206%2014l7%204c2%200%206%204%206%207%202%209-2%2012-36%2029L4%20222l4-1c12-6%2016-8%2017-7l-2%202-2%201-3%202-4%202h5c3-2%203-2%204%200l2%201c2%200%2020-10%2019-11l-7%203-6%202c-2-1%200-2%2011-8l13-6c1-2%202-1%202%201-1%201-2%202-3%201l-1%201-4%203c-6%203-4%204%202%201%2011-5%205%201-7%208l-7%205h4c3%200%204%200%203-1v-2c2-1%202-1%205%201s5%203%205%200h3c3%202%2010%203%2010%201l-2-1-2-1%203-1c2%200%203%200%202-2l2-9%202-6h-3l-2-1%203-1c2%200%203%200%204-4%202-8%203-10%204-9%201%200%200%205-3%2011a27%2027%200%2000-1%203v3l-2%209-2%207h4c11%200%2012-1%2012-7l2-8c0-2%200-2-6-2l-6-1c0-2%208-2%2010-1h2l1-1-1%2018c-1%204%200%205%201%205l1-4%202-19v11c0%2013%202%2017%202%205l1-6v6c0%2010%202%209%202-1l1-8%202%208%204%208c1%200%201-2-1-7-2-6-2-6%200-5%203%200%206-1%208-3%202-1%202-1%200-5-4-7-10-9-13-4l-1%203v-3c1-5%206-13%209-16l3-3%205%202%206%203%203%201c2%201%202%201-3%203l-9%201-3%201h11c7-2%2011-2%2011%200l2%202c4%201%205%202%204%206-1%208-2%2017-1%2020%200%204%202%205%202%202%200-2%201-4%203-5l3-2v3l-2%204c0%202%203%202%2053%202a556%20556%200%200067-2c2%202%2014%203%2016%201l-6-1c-8%200-10-1-8-6l1-4c1-2%201-1%201%202%200%205%202%206%208%206%204%200%205%201%206%202%200%202%202%203%202%201%200-3-2-4-7-5-7%200-7%200-7-2h2l6%201c4%200%206%202%208%205%200%202%201%202%2015%202l16-1h9c4-2%2018-1%2019%200%200%202%202%201%202-1v-2l2%202c2%202%204%203%204%201l-3-3c-2-3-3-4-3-7v-4l4%204c6%206%2013%2011%2015%2011l-5-5c-6-5-16-16-16-18s-6-14-9-16l-7-10-8-10c-5-4-11-7-11-6l-4-3c-4-4-11-6-15-6-2%201-2%200-4-6l-2-9c-1-2-1-2%201-2v-1c-2%200-4-3-6-5-3-3-3-4-1-4a3261%203261%200%200041%2016l29%2011a1258%201258%200%200154%2020l-3-2a1068%201068%200%2001-52-19%201827%201827%200%2000-100-37m-142%2019c-5%204-5%209-1%2017l3%206c-1%201-6-8-7-13l-2-5-3%203c-7%206-13%2024-7%2020%205-3%2017%206%2019%2014%201%204%205%207%207%206%202%200%202-1%201-4-1-4-3-4-3%200v4l-1-3-1-12h1c2%201%201-2-1-5l-2-4c3%202%209%2015%209%2019%200%203%201%203%206%202l6-1c3-1%203-1%201-3l-4-6-6-13-5-7h-5c-4%200-4%200-5-2l2-2v-12l-2%201m10%209c-1%202%204%2010%207%2012l1%202%202%204%201%203%201%201%201%202c0%202%200%202%203%201%205-3%205-4%204-7-3-5-20-19-20-18m175%2013c-1%201%203%2012%204%2013l1-2%203-6c1-1%201-1%201%201l-1%203%203-2c4-1%204-1%202-3-3-4-12-6-13-4m-200%208c-1%201%202%2021%203%2025v4c-1%202-3%209-2%2010l1-1c0-3%202-2%202%200%201%201%201%200%201-2v-3l1%203%202%201c0-3%207-14%209-16%203-2%203-3%200-4l-3-3h1l1-1-1-3-2-1h-1c2-4-11-12-12-9m213%200l5%204%208%208%206%206%204%201h3l-2-4c-2-4-12-14-13-13l-2-1-9-1m-5%203c-3%202-3%205%202%2015%204%2010%204%2010%206%207%202-2%208-6%2010-6%203%200%201-3-4-9s-10-8-14-7m-216%202c-2%203-3%204-1%204s3%200%205%204c3%206%202%208-4%208-4-1-5%200-5%201%200%202%203%203%209%203h5l-1-4-2-9-2-7-2-2-2%202m70%202c-4%205-6%206-7%209l-6%204c-11%205-11%208-1%204%207-3%2022-4%2018-1v3c3%202%2012%203%2018%200l6-1-5-2-8%201c-4%202-5%201-3-1s3-2-2-3h-3c-1%202-3-3-3-9v-7l-4%203m137%205l-5%206-4%202c-3%200-4%201-7%2011-2%209-2%209%205%2012l10%205%203%202%204-8%206-11c2-2%202-2-3-13l-5-10-4%204m-155%201c-2%202-7%203-10%204-10%202-10%203-3%206%206%202%2011%202%209%200l5-3c6-3%207-3%205-7l-1-2-5%202m129%2010l-10%204c-10%202-14%205-14%208%200%202%202%203%2010%203%205%200%207%200%207%202%201%201-2%203-12%205a1085%201085%200%2000-12%202c-1%200-2%203-2%207%200%208%200%208%2010%206%208-2%208-3%2012-8a137%20137%200%200118-22c0-5-4-8-7-7m-116%203c-2%203-6%2020-5%2021%203%202%206-7%206-15%200-6%200-6%201%202l1%209%201-5%202-4v4c-2%203-2%203%200%206l5%202c2%200%202%200%200-7l-1-7%202%205c1%205%204%2010%205%2010%203%200%2010-4%2011-7%204-10%204-13-1-12l-10%202c-6%200-7%200-9-3s-3-4-5-2h-1c-1-1-1-1-2%201'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.8045112781954886,"src":"/static/66d10fe614713c4ba584c4dc70e5bafc/2ea1d/20140910_python4.1_strings.jpg","srcSet":"/static/66d10fe614713c4ba584c4dc70e5bafc/3305a/20140910_python4.1_strings.jpg 240w,\n/static/66d10fe614713c4ba584c4dc70e5bafc/18e3d/20140910_python4.1_strings.jpg 480w,\n/static/66d10fe614713c4ba584c4dc70e5bafc/2ea1d/20140910_python4.1_strings.jpg 900w","sizes":"(max-width: 900px) 100vw, 900px"}}}}}},"pageContext":{"slug":"/python/python-strings-characters/","totalLessons":24}}}